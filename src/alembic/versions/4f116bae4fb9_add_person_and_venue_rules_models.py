"""add person and venue rules models

Revision ID: 4f116bae4fb9
Revises: d5a83b7571ca
Create Date: 2025-06-21 10:41:13.985116

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa
import sqlmodel


# revision identifiers, used by Alembic.
revision: str = '4f116bae4fb9'
down_revision: Union[str, None] = 'd5a83b7571ca'
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    """Upgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('person',
    sa.Column('active', sa.Boolean(), nullable=True),
    sa.Column('name_first', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.Column('name_last', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.Column('e_mail', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.Column('first_name_hmac', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.Column('last_name_hmac', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.Column('email_hmac', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.Column('id', sa.Uuid(), nullable=False),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('e_mail')
    )
    op.create_table('venue_rule',
    sa.Column('active', sa.Boolean(), nullable=True),
    sa.Column('association_id', sa.Uuid(), nullable=False),
    sa.Column('age_group_id', sa.Uuid(), nullable=False),
    sa.Column('gender_boy', sa.Boolean(), nullable=False),
    sa.Column('division_id', sa.Uuid(), nullable=False),
    sa.Column('venue', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.Column('sub_venue', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.Column('id', sa.Uuid(), nullable=False),
    sa.ForeignKeyConstraint(['age_group_id'], ['age_group.id'], ),
    sa.ForeignKeyConstraint(['association_id'], ['association.id'], ),
    sa.ForeignKeyConstraint(['division_id'], ['division.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.add_column('association', sa.Column('president', sa.Uuid(), nullable=True))
    op.add_column('association', sa.Column('secretary', sa.Uuid(), nullable=True))
    op.add_column('association', sa.Column('assignor', sa.Uuid(), nullable=True))
    op.add_column('association', sa.Column('registrar', sa.Uuid(), nullable=True))
    op.create_foreign_key(None, 'association', 'person', ['registrar'], ['id'])
    op.create_foreign_key(None, 'association', 'person', ['assignor'], ['id'])
    op.create_foreign_key(None, 'association', 'person', ['president'], ['id'])
    op.create_foreign_key(None, 'association', 'person', ['secretary'], ['id'])
    # ### end Alembic commands ###


def downgrade() -> None:
    """Downgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_constraint(None, 'association', type_='foreignkey')
    op.drop_constraint(None, 'association', type_='foreignkey')
    op.drop_constraint(None, 'association', type_='foreignkey')
    op.drop_constraint(None, 'association', type_='foreignkey')
    op.drop_column('association', 'registrar')
    op.drop_column('association', 'assignor')
    op.drop_column('association', 'secretary')
    op.drop_column('association', 'president')
    op.drop_table('venue_rule')
    op.drop_table('person')
    # ### end Alembic commands ###
