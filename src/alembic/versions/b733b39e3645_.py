"""empty message

Revision ID: b733b39e3645
Revises: 
Create Date: 2025-03-28 11:22:34.188215

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa
import sqlmodel


# revision identifiers, used by Alembic.
revision: str = 'b733b39e3645'
down_revision: Union[str, None] = None
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('address',
    sa.Column('address1', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.Column('address2', sqlmodel.sql.sqltypes.AutoString(), nullable=True),
    sa.Column('city', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.Column('state', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.Column('zip_code', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.Column('id', sa.Uuid(), nullable=False),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('association',
    sa.Column('name', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.Column('active', sa.Boolean(), nullable=False),
    sa.Column('id', sa.Uuid(), nullable=False),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('misconduct',
    sa.Column('game_dt', sa.DateTime(), nullable=False),
    sa.Column('venue', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.Column('age_group', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.Column('gender', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.Column('home_team', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.Column('home_team_coach', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.Column('home_score', sa.Integer(), nullable=False),
    sa.Column('away_team', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.Column('away_team_coach', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.Column('away_score', sa.Integer(), nullable=False),
    sa.Column('reported_by', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.Column('referee', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.Column('ar1', sqlmodel.sql.sqltypes.AutoString(), nullable=True),
    sa.Column('ar2', sqlmodel.sql.sqltypes.AutoString(), nullable=True),
    sa.Column('code', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.Column('offender_name', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.Column('coach_player', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.Column('player_nbr', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.Column('offender_team', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.Column('minute', sa.Integer(), nullable=False),
    sa.Column('offense', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.Column('description', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.Column('id', sa.Uuid(), nullable=False),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('season',
    sa.Column('name', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.Column('start_dt', sa.Date(), nullable=False),
    sa.Column('end_dt', sa.Date(), nullable=False),
    sa.Column('active', sa.Boolean(), nullable=False),
    sa.Column('id', sa.Uuid(), nullable=False),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('venue',
    sa.Column('name', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.Column('active', sa.Boolean(), nullable=False),
    sa.Column('address_id', sa.Uuid(), nullable=False),
    sa.Column('association_id', sa.Uuid(), nullable=False),
    sa.Column('id', sa.Uuid(), nullable=False),
    sa.ForeignKeyConstraint(['address_id'], ['address.id'], ),
    sa.ForeignKeyConstraint(['association_id'], ['association.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('sub_venue',
    sa.Column('name', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.Column('venue_id', sa.Uuid(), nullable=False),
    sa.Column('active', sa.Boolean(), nullable=False),
    sa.Column('id', sa.Uuid(), nullable=False),
    sa.ForeignKeyConstraint(['venue_id'], ['venue.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table('sub_venue')
    op.drop_table('venue')
    op.drop_table('season')
    op.drop_table('misconduct')
    op.drop_table('association')
    op.drop_table('address')
    # ### end Alembic commands ###
